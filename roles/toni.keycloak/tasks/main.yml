---
- file:
    state: directory
    path: "{{ item }}"
    recurse: yes
  loop:
    "{{ dir_exists }}"

- name: Generate docker-compose.yml file
  template:
    src: docker-compose.yml.j2
    dest: "{{ user_path }}/keycloak/docker-compose.yml"

- name: Deploy keycloak vhost
  template:
    src: keycloak.conf.j2
    dest: "{{ nginx_conf_dir }}/conf.d/keycloak.conf"
  notify: restart nginx docker

- name: Configure nginx logs
  include_role:
    name: toni.openresty
    tasks_from: logs

- name: Deploy keycloak realm
  template:
    src: realm.json.j2
    dest: "{{ user_path }}/keycloak/realm.json"
  notify: restart nginx docker

- name: Deploy terms
  template:
    src: terms.ftl.j2
    dest: "{{ user_path }}/keycloak/terms.ftl"
  notify: restart nginx docker

- name: Deploy message file locale de
  template:
    src: messages_de.properties.j2
    dest: "{{ user_path }}/keycloak/messages_de.properties"
  notify: restart nginx docker
  
- name: Deploy message file locale en
  template:
    src: messages_en.properties.j2
    dest: "{{ user_path }}/keycloak/messages_en.properties"
  notify: restart nginx docker

- name: Launch docker-compose
  docker_compose:
    project_src: "{{ user_path }}/keycloak"
    state: present
    pull: yes
    
- name: set cert facts 
  when: not existing_certs|bool
  include_role:
    name: toni.certificates
    tasks_from: certbot_facts
  vars:
    certbot_server: "{{ keycloak_server }}"
 
- name: Deploy keycloak vhost
  when: not existing_certs|bool and certbot_cert_exists|bool
  template:
    src: keycloak.conf.j2
    dest: "{{ nginx_conf_dir }}/conf.d/keycloak.conf"
  notify: restart nginx docker