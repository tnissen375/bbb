---
- name: Create coturn directory
  file:
    state: directory
    path: "{{ user_path }}/{{ deploy_name }}"

- name: Deploy Make
  template:
    src: "Makefile.j2"
    dest: "{{ user_path }}/{{ deploy_name }}/Makefile"

- name: register facts for use in client
  set_fact:
    turn_inet_ip: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}"
    stun_port: "{{ proxy_stun_port }}"
    turn_port: "{{ proxy_turn_port }}"
    turn_hostname: "{{ inventory_hostname }}"
    turn_secret: "{{ turn_secret }}"

# - debug:
#     msg:
#       "turn_hostname": "{{ hostvars[inventory_hostname]['turn_hostname'] }}"

- name: Copy snippets
  include_role:
    name: toni.openresty
    tasks_from: snippets
  vars:  
    nginx_ssl_stream_config: true
    nginx_snippets:
      - { srcname: "ssl.conf.j2", destname: "ssl.conf" }

- name: Deploy docker-compose file
  template:
    src: docker_compose_turn.conf.j2
    dest: "{{ user_path }}/{{ deploy_name }}/docker-compose.yml"
  notify: restart coturn docker

- name: Copy nginx stream config
  template:
    src: "nginx.conf.j2"
    dest: /etc/nginx/nginx.conf

- name: Copy coturn config-file
  template:
    src: "turnserver.conf.j2"
    dest: "{{ user_path }}/{{ deploy_name }}/turnserver.conf"
  vars:  
    nginx_ssl_stream_config: true
    external_ip_mapping: "{{ turn_inet_ip }}/{{ internal_nginx_docker_ip }}"
    listening_ip: "10.10.10.3"

- name: Copy coturn config-file
  template:
    src: "turnserver.conf.j2"
    dest: "{{ user_path }}/{{ deploy_name }}/turnserver2.conf"
  vars:  
    nginx_ssl_stream_config: true
    external_ip_mapping: "{{ turn_inet_ip }}"
    listening_ip: "10.10.10.4"

- name: Copy coturn config-file
  template:
    src: "turnserver.conf.j2"
    dest: "{{ user_path }}/{{ deploy_name }}/turnserver3.conf"
  vars:  
    nginx_ssl_stream_config: true
    external_ip_mapping: "{{ turn_inet_ip }}"
    listening_ip: "10.10.10.5"

- name: First start Coturn, Nginx streaming needs DNS targets // ON SERVER REBOOT coturn needs manual restart with make // will be healed by nightly cron 
  shell: make
        -C {{ user_path }}/{{ deploy_name }} restart

- name: Restart daily by cron file under /etc/cron.d
  cron:
    name: Restart Coturn
    minute: "0"
    hour: "4"
    user: root
    job: "make -C {{ user_path }}/{{ deploy_name }} restart"    