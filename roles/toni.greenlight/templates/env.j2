# Create a Secret Key for Rails
#
# You can generate a secure one through the Greenlight docker image
# with the command.
#
#   docker run --rm bigbluebutton/greenlight:v2 bundle exec rake secret
#
SECRET_KEY_BASE={{ greenlight_secret_key }}

# The endpoint and secret for your BigBlueButton server.
# Set these if you are running GreenLight on a single BigBlueButton server.
# You can retrive these by running the following command on your BigBlueButton server:
#
#   bbb-conf --secret
#
BIGBLUEBUTTON_ENDPOINT=https://{{ groups.scalelite[0] }}/bigbluebutton/
BIGBLUEBUTTON_SECRET={{ scalelite_loadbalancer_key }}

# Google Login Provider (optional)
#
# For in-depth steps on setting up a Google Login Provider, see:
#
#   https://docs.bigbluebutton.org/greenlight/gl-config.html#google-oauth2
#
# The GOOGLE_OAUTH2_HD variable is used to limit sign-ins to a particular set of Google Apps hosted
# domains. This can be a string with separating commas such as, 'domain.com, example.com' or
# a string that specifies a single domain restriction such as, 'domain.com'.
# If left blank, GreenLight will allow sign-in from all Google Apps hosted domains.
GOOGLE_OAUTH2_ID=
GOOGLE_OAUTH2_SECRET=
GOOGLE_OAUTH2_HD=

# Twitter Login Provider (optional)
#
# Twitter Authentication is deprecated and will be phased out in a future release.

# Microsoft Office365 Login Provider (optional)
#
# For in-depth steps on setting up a Office 365 Login Provider, see:
#
#   https://docs.bigbluebutton.org/greenlight/gl-config.html#office365-oauth2
#
OFFICE365_KEY=
OFFICE365_SECRET=
OFFICE365_HD=

# OpenID Connect Provider (optional)
#
# For in-depth steps on setting up a OpenID Connect Login Provider, see:
#
#   https://docs.bigbluebutton.org/greenlight/gl-config.html#openid-connect
#
OPENID_CONNECT_CLIENT_ID={{ keycloak_client_name }}
OPENID_CONNECT_CLIENT_SECRET={{ keycloak_client_secret }}
OPENID_CONNECT_ISSUER=https://{{ keycloak_domain }}/realms/{{ keycloak_realm }}
OPENID_CONNECT_HD=
OPENID_CONNECT_UID_FIELD=

# OAUTH2_REDIRECT allows you to specify the redirect_url passed to oauth on sign in.
# It is useful for cases when Greenlight is deployed behind a Network Load Balancer or proxy
OAUTH2_REDIRECT={{ greenlight_server }}

# LDAP Login Provider (use keycloak)

# Set this to true if you want GreenLight to support user signup and login without
# Omniauth. For more information, see:
#
#   https://docs.bigbluebutton.org/greenlight/gl-overview.html#accounts-and-profile
#
ALLOW_GREENLIGHT_ACCOUNTS={{ greenlight_allow_accounts }}

# To enable reCaptcha on the user sign up, define these 2 keys
# You can obtain these keys by registering your domain using the following url:
#
#  https://www.google.com/recaptcha/admin
#
RECAPTCHA_SITE_KEY=
RECAPTCHA_SECRET_KEY=

# To enable Google Analytics on your site, set this key to the Google Analytics Property Tracking ID
#
#  https://analytics.google.com/analytics/web/
#
GOOGLE_ANALYTICS_TRACKING_ID=

# Set this to true if you want GreenLight to send verification emails upon
# the creation of a new account
#
#   ALLOW_MAIL_NOTIFICATIONS=true
#
# The notifications are sent using sendmail, unless the SMTP_SERVER variable is set.
# In that case, make sure the rest of the variables are properly set.
#
#   SMTP_SERVER=smtp.gmail.com
#   SMTP_PORT=587
#   SMTP_DOMAIN=gmail.com
#   SMTP_USERNAME=<youremail@gmail.com>
#   SMTP_PASSWORD=<yourpassword>
#   SMTP_AUTH=plain
#   SMTP_STARTTLS_AUTO=true
#
SMTP_SERVER={{ greenlight_smtp_server|d('') }}
SMTP_PORT={{ greenlight_smtp_port|d('') }}
SMTP_DOMAIN={{ greenlight_smtp_domain|d('') }}
SMTP_USERNAME={{ greenlight_smtp_username|d('') }}
SMTP_PASSWORD={{ greenlight_smtp_password|d('') }}
SMTP_AUTH={{ greenlight_smtp_auth|d('') }}
SMTP_STARTTLS_AUTO={{ greenlight_smtp_starttls_auto|d('') }}

# Specify the email address that all mail is sent from
SMTP_SENDER={{ greenlight_smtp_sender|d('') }}

# Prefix for the applications root URL.
# Useful for deploying the application to a subdirectory, which is highly recommended
# if deploying on a BigBlueButton server. Keep in mind that if you change this, you'll
# have to update your authentication callback URL's to reflect this change.
#
#   The recommended prefix is "/b".
#
RELATIVE_URL_ROOT=/{% if greenlight_subpath is defined %}{{ greenlight_subpath +"/"}}|d("") }}{% endif %}

# Specify which settings you would like the users to configure on room creation
# or edit after the room has been created
# By default, all settings are turned ui.
#
# Current settings available:
#   mute-on-join: Automatically mute users by default when they join a room
#   require-moderator-approval: Require moderators to approve new users before they can join the room
#   anyone-can-start: Allows anyone with the join url to start the room in BigBlueButton
#   all-join-moderator: All users join as moderators in BigBlueButton
ROOM_FEATURES=mute-on-join,require-moderator-approval,anyone-can-start,all-join-moderator

# Specify the maximum number of records to be sent to the BigBlueButton API in one call
# Default is set to 25 records
PAGINATION_NUMBER=25

# Specify the maximum number of rows that should be displayed per page for a paginated table
# Default is set to 25 rows
NUMBER_OF_ROWS=25

# Specify if you want to display the Google Calendar button
#   ENABLE_GOOGLE_CALENDAR_BUTTON=true|false
ENABLE_GOOGLE_CALENDAR_BUTTON={{ greenlight_google_calender|bool }}

# Set the application into Maintenance Mode
#
# Current options supported:
# true: Renders an error page that does not allow users to access any of the features in the application
# false: Application runs normally
MAINTENANCE_MODE=false

# Displays a flash that appears to inform the user of a scheduled maintenance window
# This variable should contain ONLY the date and time of the scheduled maintenance
#
# Ex: MAINTENANCE_WINDOW=Friday August 18 6pm-10pm EST
MAINTENANCE_WINDOW=

# The link to the Report an Issue button that appears on the 500 page and in the Account Dropdown
#
# Defaults to the Github Issues Page for Greenlight
# Button can be disabled by setting the value to blank
REPORT_ISSUE_URL={{ greenlight_report_url }}

# The link to the Need help? button that appears on the Account Dropdown
#
# Defaults to the Greenlight documentation
# Button can be disabled by setting the value to blank
HELP_URL={{ greenlight_help_url }}

# Comment this out to send logs to STDOUT in production instead of log/production.log .
#
# RAILS_LOG_TO_STDOUT=true
#
# When using docker-compose the logs can be sent to an centralized repository like PaperTrail
# just by using the built in driver. Make sure to add to docker-compose.yml the next lines:
#
#     logging:
#      driver: $LOG_DRIVER
#      options:
#        syslog-address: $LOG_ADDRESS
#        tag: $LOG_TAG
#
# And set this variables up:
#
# LOG_DRIVER=syslog
# LOG_ADDRESS=udp://logs4.papertrailapp.com:[99999]
# LOG_TAG=greenlight.example.com:v2
#
# Check docker-compose and papertrail documentation for encrypting and
# protecting access to the log repository.
# https://docs.docker.com/config/containers/logging/syslog/#options
# https://help.papertrailapp.com/kb/configuration/encrypting-remote-syslog-with-tls-ssl/
#
# For sending logs to a remote aggregator enable these variables:
#
# RAILS_LOG_REMOTE_NAME=logxx.papertrailapp.com
# RAILS_LOG_REMOTE_PORT=9999
# RAILS_LOG_REMOTE_TAG=greenlight
#
# Force SSL
#
# ENABLE_SSL=true

# Database settings
#
# Greenlight may work out of the box with sqlite3, but for production it is recommended to use postgresql.
# In such case, these variables must be included.
#
# DB_ADAPTER=postgresql
# DB_HOST=postgres.example.com
# DB_NAME=greenlight_production
# DB_USERNAME=postgres
# DB_PASSWORD=f26b21223835cd8a
#
# For deployments based on the docker-compose script also included, the HOST should be set with the Docker container id.
#
DB_ADAPTER=postgresql
DB_HOST={{ deploy_name }}_postgres
DB_NAME={{ greenlight_db_name }}
DB_USERNAME={{ greenlight_db_user }}
DB_PASSWORD={{ greenlight_db_pass }}

# Specify the default registration to be used by Greenlight until an administrator sets the
# registration method
# Allowed values are:
#   open - For open registration
#   invite - For invite only registration
#   approval - For approve/decline registration
DEFAULT_REGISTRATION=open
